<% content_for :title, "#{@book.title}を編集" %>

<div class="container">
  <h1><%= @book.title %>を編集</h1>

  <%= form_with model: @book, local: true, html: { class: "book-form" } do |form| %>
    <% if @book.errors.any? %>
      <div class="error-messages">
        <h4><%= pluralize(@book.errors.count, "error") %> prohibited this book from being saved:</h4>
        <ul>
          <% @book.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      </div>
    <% end %>

    <div class="form-group">
      <%= form.label :title, "書籍名 *", class: "form-label" %>
      <%= form.text_field :title, class: "form-control", required: true %>
    </div>

    <div class="form-group">
      <%= form.label :author, "著者 *", class: "form-label" %>
      <%= form.text_field :author, class: "form-control", required: true %>
    </div>

    <div class="form-group">
      <%= form.label :finished_date, "読了日 *", class: "form-label" %>
      <%= form.date_field :finished_date, class: "form-control", required: true %>
    </div>

    <div class="form-group">
      <%= form.label :publisher, "出版社", class: "form-label" %>
      <%= form.text_field :publisher, class: "form-control" %>
    </div>

    <div class="form-group">
      <%= form.label :isbn, "ISBN", class: "form-label" %>
      <%= form.text_field :isbn, class: "form-control", maxlength: 13 %>
    </div>

    <div class="form-group">
      <%= form.label :price, "価格（円）", class: "form-label" %>
      <%= form.number_field :price, class: "form-control", min: 0 %>
    </div>

    <div class="form-group">
      <%= form.label :rating, "評価（1-10）", class: "form-label" %>
      <div class="rating-input">
        <%= form.range_field :rating, class: "form-range", min: 1, max: 10, step: 1, id: "rating-input" %>
        <div class="rating-display">
          <span id="rating-value"><%= @book.rating || 5 %></span>/10
          <span id="rating-stars" class="stars"></span>
        </div>
      </div>
    </div>

    <div class="form-actions">
      <%= form.submit "更新", class: "btn btn-primary" %>
      <%= link_to "詳細", @book, class: "btn btn-info" %>
      <%= link_to "キャンセル", @book, class: "btn btn-secondary" %>
    </div>
  <% end %>
</div>

<script>
// グローバルな初期化完了フラグ
window.ratingSliderInitialized = false;

// ページ読み込み時とページ表示時の両方で初期化
function initializeRatingSlider() {
  function attemptInitialization() {
    const ratingInput = document.getElementById('rating-input');
    const ratingValue = document.getElementById('rating-value');
    const ratingStars = document.getElementById('rating-stars');

    // DOM要素が見つからない場合は少し待ってから再試行
    if (!ratingInput || !ratingValue || !ratingStars) {
      return false;
    }

    function updateRatingDisplay(rating) {
      const numRating = parseInt(rating);
      if (ratingValue) {
        ratingValue.textContent = numRating;
      }
      
      if (ratingStars) {
        // より視覚的な星の表示
        const fullStars = '★'.repeat(numRating);
        const emptyStars = '☆'.repeat(10 - numRating);
        ratingStars.textContent = fullStars + emptyStars;
        
        // 評価に応じて色も変更
        if (numRating >= 8) {
          ratingStars.style.color = '#ff6b35'; // オレンジ（高評価）
        } else if (numRating >= 6) {
          ratingStars.style.color = '#ffc107'; // 黄色（中評価）
        } else {
          ratingStars.style.color = '#6c757d'; // グレー（低評価）
        }
      }
    }

    // 初期値の設定（書籍の既存評価を使用）
    const initialRating = parseInt(ratingInput.value) || 5;
    updateRatingDisplay(initialRating);

    // 既存のイベントリスナーを削除してから新しく追加
    if (ratingInput._inputHandler) {
      ratingInput.removeEventListener('input', ratingInput._inputHandler);
    }
    if (ratingInput._changeHandler) {
      ratingInput.removeEventListener('change', ratingInput._changeHandler);
    }
    if (ratingInput._mousemoveHandler) {
      ratingInput.removeEventListener('mousemove', ratingInput._mousemoveHandler);
    }

    // イベントハンドラー関数を定義
    ratingInput._inputHandler = function() {
      updateRatingDisplay(parseInt(this.value));
    };
    
    ratingInput._changeHandler = function() {
      updateRatingDisplay(parseInt(this.value));
    };
    
    ratingInput._mousemoveHandler = function() {
      if (document.activeElement === this) {
        updateRatingDisplay(parseInt(this.value));
      }
    };

    // スライダーのリアルタイム更新（inputイベント）
    ratingInput.addEventListener('input', ratingInput._inputHandler);

    // 値確定時の更新（changeイベント）
    ratingInput.addEventListener('change', ratingInput._changeHandler);

    // マウスやキーボード操作への対応強化
    ratingInput.addEventListener('mousemove', ratingInput._mousemoveHandler);

    return true;
  }

  // 初期化を試行し、失敗した場合は再試行
  if (!attemptInitialization()) {
    // 50ms後に再試行
    setTimeout(function() {
      if (!attemptInitialization()) {
        // さらに100ms後に再試行
        setTimeout(function() {
          if (!attemptInitialization()) {
            // 最後に300ms後に再試行
            setTimeout(attemptInitialization, 300);
          }
        }, 100);
      }
    }, 50);
  }
}

// 即座に実行（インライン実行）
initializeRatingSlider();

// 複数のタイミングで初期化を実行
document.addEventListener('DOMContentLoaded', function() {
  setTimeout(initializeRatingSlider, 10);
});

window.addEventListener('load', function() {
  setTimeout(initializeRatingSlider, 10);
});

window.addEventListener('pageshow', function() {
  setTimeout(initializeRatingSlider, 10);
});

// 定期的にチェックして初期化（保険）
let initCheckInterval = setInterval(function() {
  const ratingInput = document.getElementById('rating-input');
  const ratingValue = document.getElementById('rating-value');
  const ratingStars = document.getElementById('rating-stars');
  
  if (ratingInput && ratingValue && ratingStars) {
    initializeRatingSlider();
    clearInterval(initCheckInterval);
  }
}, 100);

// 5秒後にインターバルを停止（無限ループ防止）
setTimeout(function() {
  clearInterval(initCheckInterval);
}, 5000);

// フォームバリデーション
document.addEventListener('DOMContentLoaded', function() {
  const form = document.querySelector('.book-form');
  if (form) {
    form.addEventListener('submit', function(e) {
      const title = document.querySelector('#book_title').value.trim();
      const author = document.querySelector('#book_author').value.trim();
      const finishedDate = document.querySelector('#book_finished_date').value;

      if (!title || !author || !finishedDate) {
        e.preventDefault();
        alert('必須項目を入力してください。');
        return false;
      }

      const isbn = document.querySelector('#book_isbn').value.trim();
      if (isbn && isbn.length > 13) {
        e.preventDefault();
        alert('ISBNは13文字以下で入力してください。');
        return false;
      }

      const price = document.querySelector('#book_price').value;
      if (price && price < 0) {
        e.preventDefault();
        alert('価格は0以上の値を入力してください。');
        return false;
      }
    });
  }
});
</script>